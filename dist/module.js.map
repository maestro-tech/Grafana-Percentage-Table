{"version":3,"sources":["../src/module.js"],"names":["angular","_","$","moment","TablePanelCtrl","PercentageTablePanelCtrl","$scope","$injector","$rootScope","result","data","length","error","Error","message","lengthSerieA","rows","lengthSerieB","maxLengthSeries","i","dataFirst","dataSecond","res","setTimeQueryEnd","loading","subscribe","handleDataStream","dashboard","snapshot","panel","snapshotData","console","log","events","emit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEOA,a;;AACAC,O;;AACAC,O;;AACAC,Y;;AACCC,oB,+BAAAA,c;;;;;;;;;;;;;;;;;;;;;+DAEFC,wB;;;AAEJ;AACA,0CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,0JACnCF,MADmC,EAC3BC,SAD2B;;AAEzC,gBAAKC,UAAL,GAAkBA,UAAlB;AAFyC;AAG1C;;;;4CAEiBC,M,EAAQ;AACxB,gBAAIA,OAAOC,IAAP,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,kBAAIC,QAAQ,IAAIC,KAAJ,EAAZ;AACAD,oBAAME,OAAN,GAAgB,uBAAhB;AACAF,oBAAMF,IAAN,GAAa,0BAA0BD,OAAOC,IAAP,CAAYC,MAAtC,GAA+C,2DAA5D;AACA,oBAAMC,KAAN;AACD;;AAED,gBAAMG,eAAeN,OAAOC,IAAP,CAAY,CAAZ,EAAeM,IAAf,CAAoBL,MAAzC;AACA,gBAAMM,eAAeR,OAAOC,IAAP,CAAY,CAAZ,EAAeM,IAAf,CAAoBL,MAAzC;AACA,gBAAMO,kBAAkBH,eAAeE,YAAf,GAA8BF,YAA9B,GAA6CE,YAArE;;AAEA,gBAAIF,iBAAiBE,YAArB,EAAmC;AAClC,kBAAIL,SAAQ,IAAIC,KAAJ,EAAZ;AACAD,qBAAME,OAAN,GAAgB,yBAAhB;AACAF,qBAAMF,IAAN,GAAa,iBAAiBK,YAAjB,GAAgC,qBAAhC,GAAwDE,YAArE;AACA,oBAAML,MAAN;AACA;;AAED,iBAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAID,eAApB,EAAqCC,GAArC,EAA0C;AACxC,kBAAMC,YAAYX,OAAOC,IAAP,CAAY,CAAZ,EAAeM,IAAf,CAAoBG,CAApB,EAAuB,CAAvB,CAAlB;AACA,kBAAME,aAAaZ,OAAOC,IAAP,CAAY,CAAZ,EAAeM,IAAf,CAAoBG,CAApB,EAAuB,CAAvB,CAAnB;AACA,kBAAMG,MAAOF,YAAYC,UAAb,GAA2B,GAAvC;AACAZ,qBAAOC,IAAP,CAAY,CAAZ,EAAeM,IAAf,CAAoBG,CAApB,EAAuB,CAAvB,IAA4BG,GAA5B;AACD;;AAED,iBAAKC,eAAL;AACA,iBAAKC,OAAL,GAAe,KAAf;;AAEA;AACA,gBAAIf,UAAUA,OAAOgB,SAArB,EAAgC;AAC9B,mBAAKC,gBAAL,CAAsBjB,MAAtB;AACA;AACD;;AAED,gBAAI,KAAKkB,SAAL,CAAeC,QAAnB,EAA6B;AAC3B,mBAAKC,KAAL,CAAWC,YAAX,GAA0BrB,OAAOC,IAAjC;AACD;;AAED,gBAAI,CAACD,MAAD,IAAW,CAACA,OAAOC,IAAvB,EAA6B;AAC3BqB,sBAAQC,GAAR,CAAY,uDAAZ,EAAqEvB,MAArE;AACAA,uBAAS,EAACC,MAAM,EAAP,EAAT;AACD;;AAED,iBAAKuB,MAAL,CAAYC,IAAZ,CAAiB,eAAjB,EAAkCzB,OAAOC,IAAzC;AACD;;;;QArDoCN,c;;0CAyDrCC,wB;;2BACAA,wB","file":"module.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport {TablePanelCtrl} from 'app/plugins/panel/table/module';\n\nclass PercentageTablePanelCtrl extends TablePanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n  }\n\n  handleQueryResult(result) {\n    if (result.data.length !== 2) {\n      let error = new Error();\n      error.message = 'Too many series error';\n      error.data = 'Metric query returns ' + result.data.length + ' series.\\nPercentage stat table panel expects two series.';\n      throw error;\n    }\n\n    const lengthSerieA = result.data[0].rows.length;\n    const lengthSerieB = result.data[1].rows.length;\n    const maxLengthSeries = lengthSerieA > lengthSerieB ? lengthSerieA : lengthSerieB;\n\n    if (lengthSerieA !== lengthSerieB) {\n     let error = new Error();\n     error.message = 'Not same amount of data';\n     error.data = 'Serie A has ' + lengthSerieA + ' while Serie B has ' + lengthSerieB;\n     throw error;\n    }\n\n    for (let i = 0; i < maxLengthSeries; i++) {\n      const dataFirst = result.data[0].rows[i][2];\n      const dataSecond = result.data[1].rows[i][2];\n      const res = (dataFirst / dataSecond) * 100;\n      result.data[0].rows[i][2] = res;\n    }\n\n    this.setTimeQueryEnd();\n    this.loading = false;\n\n    // check for if data source returns subject\n    if (result && result.subscribe) {\n      this.handleDataStream(result);\n      return;\n    }\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = {data: []};\n    }\n\n    this.events.emit('data-received', result.data);\n  }\n}\n\nexport {\n  PercentageTablePanelCtrl,\n  PercentageTablePanelCtrl as PanelCtrl\n};\n"]}