{"version":3,"sources":["../src/module.js"],"names":["angular","_","$","moment","PanelCtrl","TablePanelCtrl","console","log","prototype","__proto__"],"mappings":";;;;;;;;;AAEOA,a;;AACAC,O;;AACAC,O;;AACAC,Y;;AACCC,e,kBAAAA,S;;AACAC,oB,iCAAAA,c;;;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhDA;;AAkDAC,cAAQC,GAAR,CAAYF,eAAeG,SAAf,CAAyBC,SAArC;;gCAGEJ,c;;2BACAA,c","file":"module.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport {TablePanelCtrl} from 'app/plugins/panel/table/module.js';\n\n// class PercentageTablePanelCtrl extends PanelCtrl {\n//\n//   /** @ngInject */\n//   constructor($scope, $injector, $rootScope) {\n//     super($scope, $injector, $rootScope);\n//     this.$rootScope = $rootScope;\n//\n//     _.defaults(this.panel, this.panelDefaults);\n//   }\n//\n//   handleQueryResult(result) {\n//     if (result.data.length !== 2) {\"\"\n//       let error = new Error();\n//       error.message = 'Too many series error';\n//       error.data = 'Metric query returns ' + result.data.length + ' series.\\nPercentage stat table panel expects two series.';\n//       throw error;\n//     }\n//\n//     const lengthSerieA = result.data[0].rows.length;\n//     const lengthSerieB = result.data[1].rows.length;\n//     const maxLengthSeries = lengthSerieA > lengthSerieB ? lengthSerieA : lengthSerieB;\n//\n//     if (lengthSerieA !== lengthSerieB) {\n//      let error = new Error();\n//      error.message = 'Not same amount of data';\n//      error.data = 'Serie A has ' + lengthSerieA + ' while Serie B has ' + lengthSerieB;\n//      throw error;\n//     }\n//\n//     for (let i = 0; i < maxLengthSeries; i++) {\n//       const dataFirst = result.data[0].rows[i][2];\n//       const dataSecond = result.data[1].rows[i][2];\n//       const res = (dataFirst / dataSecond) * 100;\n//       result.data[0].rows[i][2] = res;\n//     }\n//     return super.handleQueryResult(result);\n//   }\n// }\n//\n// PercentageTablePanelCtrl.templateUrl = 'module.html';\n\nconsole.log(TablePanelCtrl.prototype.__proto__);\n\nexport {\n  TablePanelCtrl,\n  TablePanelCtrl as PanelCtrl\n};\n"]}