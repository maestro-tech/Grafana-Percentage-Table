{"version":3,"sources":["../src/renderer.js"],"names":["_","moment","kbn","TableRenderer","panel","table","isUtc","sanitize","templateSrv","initColumns","formatters","colorState","colIndex","columns","length","column","title","text","i","styles","style","regex","stringToJsRegex","pattern","match","alias","replace","createColumnFormatter","value","thresholds","colors","first","v","undefined","isArray","join","escape","defaultCellFormatter","type","date","utc","format","dateFormat","valueFormatter","valueFormats","unit","isString","colorMode","getColorForValue","decimals","rowIndex","scopedVars","cell_variable","row","rows","columnIndex","addWidthHack","formatColumnValue","cellClasses","cellClass","cell","widthHack","hidden","columnStyle","preserveFormat","push","columnHtml","link","renderRowVariables","cellLink","linkUrl","cellLinkTooltip","linkTooltip","cellTarget","linkTargetBlank","page","pageSize","startPos","endPos","Math","min","html","y","cellHtml","rowStyle","renderCell","new_row"],"mappings":"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","file":"renderer.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\n\nexport class TableRenderer {\n  constructor(panel, table, isUtc, sanitize, templateSrv) {\n    this.table = table;\n    this.isUtc = isUtc;\n    this.panel = panel;\n    this.sanitize = sanitize;\n    this.templateSrv = templateSrv;\n    this.initColumns();\n  }\n\n  setTable(table) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      let column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        let style = this.panel.styles[i];\n\n        var regex = kbn.stringToJsRegex(style.pattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = column.text.replace(regex, style.alias);\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value, style) {\n    if (!style.thresholds) { return null; }\n\n    for (var i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return style.colors[i];\n      }\n    }\n    return _.first(style.colors);\n  }\n\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return _.escape(v);\n    }\n  }\n\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return v => {\n        return undefined;\n      };\n    }\n\n    if (column.style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) { v = v[0]; }\n        var date = moment(v);\n        if (this.isUtc) {\n          date = date.utc();\n        }\n        return date.format(column.style.dateFormat);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      let valueFormatter = kbn.valueFormats[column.unit || column.style.unit];\n\n      return v =>  {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (_.isString(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        if (column.style.colorMode) {\n          this.colorState[column.style.colorMode] = this.getColorForValue(v, column.style);\n        }\n\n        return valueFormatter(v, column.style.decimals, null);\n      };\n    }\n\n    return (value) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  renderRowVariables(rowIndex) {\n    let scopedVars = {};\n    let cell_variable;\n    let row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cell_variable = `__cell_${i}`;\n      scopedVars[cell_variable] = { value: row[i] };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex, value) {\n    return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n  }\n\n  renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n    var style = '';\n    var cellClasses = [];\n    var cellClass = '';\n    if (this.colorState.cell) {\n      style = ' style=\"background-color:' + this.colorState.cell + ';color: white\"';\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      style = ' style=\"color:' + this.colorState.value + '\"';\n      this.colorState.value = null;\n    }\n\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    var widthHack = '';\n    if (addWidthHack) {\n      widthHack = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      style = ' style=\"display:none;\"';\n      this.table.columns[columnIndex].hidden = true;\n    } else {\n      this.table.columns[columnIndex].hidden = false;\n    }\n\n    var columnStyle = this.table.columns[columnIndex].style;\n    if (columnStyle && columnStyle.preserveFormat) {\n      cellClasses.push(\"table-panel-cell-pre\");\n    }\n\n    var columnHtml = value + widthHack;\n\n    if (columnStyle && columnStyle.link) {\n      // Render cell as link\n      var scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value };\n\n      var cellLink = this.templateSrv.replace(columnStyle.linkUrl, scopedVars);\n      var cellLinkTooltip = this.templateSrv.replace(columnStyle.linkTooltip, scopedVars);\n      var cellTarget = columnStyle.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push(\"table-panel-cell-link\");\n      columnHtml = `\n        <a href=\"${cellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\">\n          ${columnHtml}\n        </a>\n      `;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + style + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page) {\n    let pageSize = this.panel.pageSize || 100;\n    let startPos = page * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    var html = \"\";\n\n    for (var y = startPos; y < endPos; y++) {\n      let row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      for (var i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + ';color: white\"';\n        this.colorState.row = null;\n      }\n\n      html += '<tr ' + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    let rows = [];\n\n    for (var y = 0; y < this.table.rows.length; y++) {\n      let row = this.table.rows[y];\n      let new_row = [];\n      for (var i = 0; i < this.table.columns.length; i++) {\n        new_row.push(this.formatColumnValue(i, row[i]));\n      }\n      rows.push(new_row);\n    }\n    return {\n        columns: this.table.columns,\n        rows: rows,\n    };\n  }\n}\n"]}